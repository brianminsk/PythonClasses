Automatic watering, lighting, and monitoring system for a greenhouse

System includes a database server with species of plants and their soil and air moisture requirements, the color of a healthy plant, and the light and temperature requirements. Each plant would have a networked MCU associated with it that would have a soil moisture sensor (digital output), a color sensor pointed at the plant (simulated analog output, I think), a photoresistor (placed close to the plant by not blocked by it from light sources) (digital output), and a servo for opening/closing a valve on a water pipe to water the plant (digital input). The greenhouse would have networked MCUs placed around it with thermosistors (digital output), and moisture sensors (digital output). Lights in the greenhouse would each have a networked MCU that simply controlled the intensity of each light(simulated analog input). Each window in the greenhouse would have an MCU that could be open and closed by actuators (digital input) controlled by the MCUs.

Each MCU would be associated with its plant type in the species database. Watering would be controlled in reference to values in the database and real-time sensed soil moisture content and plant color. Software on a server for controlling lighting would take inputs from the plant photoresistors, the location of each plant, the light requirements of each species from the database, and send messages to each MCU controlling a light to optimize lighting for the greenhouse as a whole (some kind AI magic software is needed, perhaps), with reference to the plant MCUs' photoresistor readings. Some other software on a server (again, probably some AI magic) will optimize air moisture content and temperature of the greenhouse as a whole by controlling the MCUs that open/close windows, with reference to the species database and readings from the MCUs placed around the greenhouse to measure air moisture and temperature.

A web server would serve a site that shows data from the various MCU sensors in the greenhouse, present it to users, and allow users to overide the control software to control MCU actuators manually - all from any remote location.